"""add rights table

Revision ID: 96201eea6c2d
Revises: dfd288a55201
Create Date: 2024-04-19 15:57:12.013078

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '96201eea6c2d'
down_revision: Union[str, None] = 'dfd288a55201'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

createstructright = sa.Enum(
    'in_organization', 
    'in_overstruct', 
    'in_struct', 
    'nowhere', 
    name='createstructright'
)

createvacancyrigth = sa.Enum(
    'organization', 
    'in_overstructure', 
    'lower_level', 
    'in_structure', 
    'downstream', 
    'subordinates', 
    'nobody', 
    name='createvacancyrigth'
)

sendtaskvector = sa.Enum(
    'everyone', 
    'organization', 
    'structure', 
    'downstream', 
    'direct_down', 
    'nobody', 
    name='sendtaskvector'
)

sendpetitionvector = sa.Enum(
    'everyone', 
    'organization', 
    'upstream', 
    'structure', 
    'direct_up', 
    'nobody', 
    name='sendpetitionvector'
)

rejecttaskright = sa.Enum(
    'everyone', 
    'structure', 
    'undirect', 
    'same_level', 
    'nobody', 
    name='rejecttaskright'
)

editotherright = sa.Enum(
    'organization', 
    'structure', 
    'direct', 
    'nobody', 
    name='editotherright'
)

def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('rights',
    sa.Column('role_id', sa.Uuid(), nullable=False),
    sa.Column('template_id', sa.Uuid(), nullable=True),
    sa.Column('can_create_substructures', createstructright, nullable=False),
    sa.Column('can_create_subordinates', createvacancyrigth, nullable=False),
    sa.Column('can_create_project', sa.Boolean(), nullable=False),
    sa.Column('can_send_task', sendtaskvector, nullable=False),
    sa.Column('can_send_report', sa.Boolean(), nullable=False),
    sa.Column('can_send_petition', sendpetitionvector, nullable=False),
    sa.Column('can_reject_task', rejecttaskright, nullable=False),
    sa.Column('can_edit_other_rights', editotherright, nullable=False),
    sa.Column('can_edit_oneself_rights', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('edited_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['template_id'], ['rights.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('rights')
    createvacancyrigth.drop(op.get_bind(), checkfirst=False)
    sendtaskvector.drop(op.get_bind(), checkfirst=False)
    sendpetitionvector.drop(op.get_bind(), checkfirst=False)
    rejecttaskright.drop(op.get_bind(), checkfirst=False)
    editotherright.drop(op.get_bind(), checkfirst=False)
    # ### end Alembic commands ###
